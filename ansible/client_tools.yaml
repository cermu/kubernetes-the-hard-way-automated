- hosts: localhost
  name: Install Client Tools
  become: true
  become_user: ubuntu
  gather_facts: true

  vars:
    RELEASE: "v1.32.5"
    CONTAINERD_VERSION: "2.1.0-beta.0"
    RUNC_VERSION: "v1.3.0"
    CRI_VERSION: "v1.32.0"
    CNI_VERSION: "v1.6.2"
    ETCD_VERSION: "v3.6.0"

  tasks:
    - name: Install curl
      apt:
        name: curl
        state: present
        update_cache: yes
      become_user: root
    
    - name: Install openssl
      apt:
        name: openssl
        state: present
        update_cache: yes
      become_user: root

    - name: Create downloads Directory
      file:
        path: /home/ubuntu/downloads
        state: directory
        mode: 0755
    
    - name: Download K8s components binaries 
      get_url:
        url: "{{ item }}"
        dest: /home/ubuntu/downloads/
        mode: 0755
      loop:
        - https://dl.k8s.io/{{ RELEASE }}/bin/linux/amd64/kubectl
        - https://dl.k8s.io/{{ RELEASE }}/bin/linux/amd64/kube-apiserver
        - https://dl.k8s.io/{{ RELEASE }}/bin/linux/amd64/kube-controller-manager
        - https://dl.k8s.io/{{ RELEASE }}/bin/linux/amd64/kube-scheduler
        - https://dl.k8s.io/{{ RELEASE }}/bin/linux/amd64/kube-proxy
        - https://dl.k8s.io/{{ RELEASE }}/bin/linux/amd64/kubelet
        - https://github.com/kubernetes-sigs/cri-tools/releases/download/{{ CRI_VERSION }}/crictl-{{ CRI_VERSION }}-linux-amd64.tar.gz
        - https://github.com/opencontainers/runc/releases/download/{{ RUNC_VERSION }}-rc.1/runc.amd64
        - https://github.com/containernetworking/plugins/releases/download/{{ CNI_VERSION }}/cni-plugins-linux-amd64-{{ CNI_VERSION }}.tgz
        - https://github.com/containerd/containerd/releases/download/v{{ CONTAINERD_VERSION }}/containerd-{{ CONTAINERD_VERSION }}-linux-amd64.tar.gz
        - https://github.com/etcd-io/etcd/releases/download/{{ ETCD_VERSION }}-rc.3/etcd-{{ ETCD_VERSION }}-rc.3-linux-amd64.tar.gz

    - name: Install kubectl
      copy:
        src: /home/ubuntu/downloads/kubectl
        dest: /usr/local/bin/
        mode: a+x
      become_user: root
      
    - name: Get kubectl version
      shell: kubectl version --client
      register: kubectl_version
      become_user: root

    - name: Show kubectl version
      debug:
        msg:
        - "{{ kubectl_version.stdout_lines }}" 