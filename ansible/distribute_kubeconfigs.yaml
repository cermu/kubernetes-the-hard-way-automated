- hosts: workers
  name: Distribute kubeconfigs to worker nodes
  gather_facts: true

  vars:
    configs_location: "/home/ubuntu/configs"
    kubelet_remote_location: "/var/lib/kubelet"
    kube_proxy_remote_location: "/var/lib/kube-proxy"

  tasks:
    - name: Create remote directories if they do not exist
      file:
        path: "{{ item }}"
        state: directory
        mode: 0755
      loop:
        - "{{ kubelet_remote_location }}"
        - "{{ kube_proxy_remote_location }}"
      become: true
      become_user: root
    
    - name: copy kube-proxy kubeconfig
      copy: 
        src: "{{ configs_location }}/kube-proxy.kubeconfig"
        dest: "{{ kube_proxy_remote_location }}/kubeconfig"
        owner: ubuntu
        group: ubuntu
        mode: 0644
      become: true
      become_user: root

    - name: copy workernode1 kubeconfig
      copy: 
        src: "{{ configs_location }}/workernode1.kubeconfig"
        dest: "{{ kubelet_remote_location }}/kubeconfig"
        owner: ubuntu
        group: ubuntu
        mode: 0644
      when: inventory_hostname == "workernode1"
      become: true
      become_user: root

    - name: copy workernode2 kubeconfig
      copy: 
        src: "{{ configs_location }}/workernode2.kubeconfig"
        dest: "{{ kubelet_remote_location }}/kubeconfig"
        owner: ubuntu
        group: ubuntu
        mode: 0644
      when: inventory_hostname == "workernode2"
      become: true
      become_user: root

- hosts: controller
  name: Distribute kubeconfigs to control nodes
  become: true
  become_user: ubuntu
  gather_facts: true

  vars:
    configs_location: "/home/ubuntu/configs"
    remote_location: "/home/ubuntu/"

  tasks:
    - name: copy kubeconfigs to controller node
      copy: 
        src: "{{ item }}"
        dest: "{{ remote_location }}"
        owner: ubuntu
        group: ubuntu
        mode: 0644
      loop:
        -  "{{ configs_location }}/admin.kubeconfig"
        -  "{{ configs_location }}/kube-controller-manager.kubeconfig"
        -  "{{ configs_location }}/kube-scheduler.kubeconfig"
        -  "{{ configs_location }}/encryption-config.yaml"
